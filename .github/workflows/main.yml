name: Gestion des pushs
run-name: ${{ github.actor }} is testing out GitHub Actions

on:
  push:
    branches: [dev]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configuration of the python env
        uses: actions/setup-python@v3
        with:
          python-version: 3.x

      - name: Tests execution
        run: |
          python -m unittest discover tests/

  merge-or-create-failure-branch:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Git configuration
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Get current date
        id: get_date
        run: |
          echo "CURRENT_DATE=$(date +'%Y-%m-%d-%H-%M-%S')" >> $GITHUB_ENV

      - name: Merge or create feature branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ "${{ needs.build-and-test.result }}" == "success" ]; then
            echo "Tests passed --> merging to master"
            git fetch origin
            git checkout master
            git pull origin master
            git merge dev
            git push origin master
          else
            echo "Tests failed --> creating new failure branch"
            git checkout dev
            git checkout -b "failures/${{ env.CURRENT_DATE }}"
            git push origin "failures/${{ env.CURRENT_DATE }}"
            echo "Reverting dev to last successful commit"
            git checkout dev
            git reset --hard HEAD~1
            git push --force origin dev
          fi
