name: Gestion des pushs
run-name: ${{ github.actor }} is testing out GitHub Actions

on: 
  push:
    branches: [dev]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configuration de l'environnement python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11.5

      - name: Exécution des tests
        run: |
          python -m unittest discover tests/

  merge-or-create-failure-branch:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Récupération de la date actuelle
        id: get_current_date
        run: |
          echo "CURRENT_DATE=$(date +'%Y-%m-%d-%H-%M-%S')" >> $GITHUB_ENV

      - name: Fusion sur master ou création d'une branche d'erreur
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ "${{ needs.build-and-test.result }}" == "success" ]; then
            echo "Tests passed, merging to master..."
            git checkout -b master
            git merge dev
            git push origin master
            git checkout dev
          else
            echo "Tests failed, creating failure branch..."
            git checkout dev
            git checkout -b "failures/${{ env.CURRENT_DATE }}"
            git push origin "failures/${{ env.CURRENT_DATE }}"
            echo "Reverting dev to last successful commit..."
            LAST_GOOD_COMMIT=$(git rev-list --all --grep 'CI: Successful build' -n 1)
            git reset --hard $LAST_GOOD_COMMIT
          fi

  mark-success:
    needs: [build-and-test, merge-or-create-failure-branch]
    if: success()
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Mark commit as successful
        run: |
          echo "CI: Successful build" | git commit --allow-empty -F -
          git push origin dev
